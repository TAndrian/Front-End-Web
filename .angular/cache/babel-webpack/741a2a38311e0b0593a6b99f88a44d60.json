{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SiteService = /*#__PURE__*/(() => {\n  class SiteService {\n    constructor(http) {\n      this.http = http;\n      this.options = {\n        headers: new HttpHeaders().set('Content-Type', 'application/json'),\n        observe: 'response'\n      };\n    }\n\n    addSite(site) {\n      return this.http.post(environment.apiUrl + 'site/add', site, this.options);\n    }\n\n    getSiteById(id) {\n      return this.http.get(environment.apiUrl + 'site/get/' + id);\n    }\n\n    getAllSites() {\n      return this.http.get(environment.apiUrl + 'site/get');\n    }\n\n    updateSiteById(id, site) {\n      return this.http.put(environment.apiUrl + 'site/update/' + id, site, this.options);\n    }\n\n    deleteSiteById(id) {\n      return this.http.delete(environment.apiUrl + 'site/delete/' + id);\n    }\n\n  }\n\n  SiteService.ɵfac = function SiteService_Factory(t) {\n    return new (t || SiteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SiteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SiteService,\n    factory: SiteService.ɵfac,\n    providedIn: 'root'\n  });\n  return SiteService;\n})();","map":null,"metadata":{},"sourceType":"module"}