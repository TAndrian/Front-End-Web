{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { User } from 'src/app/shared/model/user';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthentificationService = /*#__PURE__*/(() => {\n  class AuthentificationService {\n    constructor(http) {\n      this.http = http;\n      this.authentified = localStorage.getItem('currentUser') != undefined;\n      this.currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n    }\n\n    get currentUserValue() {\n      return this.currentUserSubject.value;\n    }\n\n    get userState() {\n      return this.authentified;\n    }\n\n    login(username, password) {\n      return this.http.post(environment.apiUrl + 'authentification/authentifier', {\n        username,\n        password\n      }).pipe(mergeMap(token => this.http.get(environment.apiUrl + 'utilisateur/get/myself', {\n        headers: new HttpHeaders().set('Authorization', 'Bearer ' + token[\"jwt\"])\n      }).pipe(map(user => {\n        let u = new User(user[\"id\"], user[\"username\"], user[\"password\"], user[\"role\"], token[\"jwt\"]);\n        this.currentUserSubject.next(u);\n        this.authentified = true;\n        localStorage.setItem('currentUser', JSON.stringify(u));\n        return user;\n      }))));\n    }\n\n    logout() {\n      localStorage.removeItem('currentUser');\n      this.currentUserSubject.next(null);\n      this.authentified = false;\n    }\n\n  }\n\n  AuthentificationService.ɵfac = function AuthentificationService_Factory(t) {\n    return new (t || AuthentificationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthentificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthentificationService,\n    factory: AuthentificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthentificationService;\n})();","map":null,"metadata":{},"sourceType":"module"}